/**
 * Autogenerated interface, DO NOT MODIFY
 */
/* tslint:disable */
import { GraphDao } from "./graph-dao";
import { ILoginInformation } from "./interfaces/login-information.generated"; 

export class DebugDao extends GraphDao {
    
    /**
     * throws angry error
     * */
    public fooBar = (placementRoundId: number): Promise<string> => {
        const query = `query debug_fooBar($placementRoundId: Int) {
    debug_fooBar(placementRoundId: $placementRoundId)
     { undefined } 
}`;
        return this.post({ query, variables: { placementRoundId: placementRoundId } });
    }

    
    /**
     * Render test set, will truncate participnts and students
     * */
    public fail = (errorCode: number, message: string): Promise<void> => {
        const query = `mutation debug_fail($errorCode: Int, $message: String) {
    debug_fail(errorCode: $errorCode, message: $message)
     { undefined } 
}`;
        return this.post({ query, variables: { errorCode: errorCode,message: message } });
    }

    
    /**
     * Cheat way to log in as a user, does not work in prod environment
     * */
    public logMeIn = (userSsn: string): Promise<ILoginInformation> => {
        const query = `mutation debug_logMeIn($userSsn: String) {
    debug_logMeIn(userSsn: $userSsn)
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: { userSsn: userSsn } });
    }

    
    /**
     * Render test set, will truncate participnts and students
     * */
    public renderTestChoices = (placementRoundId: number): Promise<void> => {
        const query = `mutation debug_renderTestChoices($placementRoundId: Int) {
    debug_renderTestChoices(placementRoundId: $placementRoundId)
     { undefined } 
}`;
        return this.post({ query, variables: { placementRoundId: placementRoundId } });
    }

    
    /**
     * Render test set, will truncate participnts and students
     * */
    public renderTestParticipants = (placementRoundId: number): Promise<void> => {
        const query = `mutation debug_renderTestParticipants($placementRoundId: Int) {
    debug_renderTestParticipants(placementRoundId: $placementRoundId)
     { undefined } 
}`;
        return this.post({ query, variables: { placementRoundId: placementRoundId } });
    }

    
    /**
     * Render test set, will truncate participnts and students
     * */
    public renderTestStudents = (): Promise<void> => {
        const query = `mutation debug_renderTestStudents {
    debug_renderTestStudents
     { undefined } 
}`;
        return this.post({ query, variables: {  } });
    }

}
