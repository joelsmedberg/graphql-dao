/**
 * Autogenerated interface, DO NOT MODIFY
 */
/* tslint:disable */
import { GraphDao } from "./graph-dao";
import { IStudent } from "./interfaces/student.generated"; 

export class StudentDao extends GraphDao {
    
    /**
     * 
     * */
    public getForParent(parentSsn: string): Promise<IStudent[]> {
        const query = `query student_getForParent($parentSsn: String) {
    student_getForParent(parentSsn: $parentSsn)
     { studentSsn
 createdAt
 firstName
 lastName
 parent1
 parent2
 address
 address2
 zipcode
 city
 municipality
 area
 grade
 currentSchool
 canContinue
 lat
 lng } 
}`;
        return this.post({ query, variables: { parentSsn: parentSsn } });
    }

    
    /**
     * banan
     * */
    public getStudent(studetnSsn: string): Promise<IStudent> {
        const query = `query student_getStudent($studetnSsn: String) {
    student_getStudent(studetnSsn: $studetnSsn)
     { studentSsn
 createdAt
 firstName
 lastName
 parent1
 parent2
 address
 address2
 zipcode
 city
 municipality
 area
 grade
 currentSchool
 canContinue
 lat
 lng } 
}`;
        return this.post({ query, variables: { studetnSsn: studetnSsn } });
    }

    
    /**
     * 
     * */
    public listAll(): Promise<IStudent[]> {
        const query = `query student_listAll {
    student_listAll
     { studentSsn
 createdAt
 firstName
 lastName
 parent1
 parent2
 address
 address2
 zipcode
 city
 municipality
 area
 grade
 currentSchool
 canContinue
 lat
 lng } 
}`;
        return this.post({ query, variables: {  } });
    }

    
    /**
     * Creates a new student, fails if student already exists. Requires operator rights
     * */
    public createNew(student: IStudent): Promise<IStudent> {
        const query = `mutation student_createNew($student: StudentInput) {
    student_createNew(student: $student)
     { studentSsn
 createdAt
 firstName
 lastName
 parent1
 parent2
 address
 address2
 zipcode
 city
 municipality
 area
 grade
 currentSchool
 canContinue
 lat
 lng } 
}`;
        return this.post({ query, variables: { student: student } });
    }

}
