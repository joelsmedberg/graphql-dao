/**
 * Autogenerated interface, DO NOT MODIFY
 */
/* tslint:disable */
import { GraphDao } from "./graph-dao";
import { IViewComment } from "./interfaces/view-comment.generated"; 
import { IComment } from "./interfaces/comment.generated"; 

export class CommentDao extends GraphDao {
    
    /**
     * Gives all comments for an item
     * */
    public listForParent = (parentId: string, parentType: string): Promise<IViewComment[]> => {
        const query = `query comment_listForParent($parentId: String, $parentType: String) {
    comment_listForParent(parentId: $parentId, parentType: $parentType)
     { commentId
 createdAt
 createdBy
 municipality
 commentParentId
 corpus
 deleted
 createdByFirstName
 createdByLastName
 workplace commentParentType } 
}`;
        return this.post({ query, variables: { parentId: parentId,parentType: parentType } });
    }

    
    /**
     * Creates a new comment
     * */
    public createComment = (comment: IComment): Promise<IViewComment> => {
        const query = `mutation comment_createComment($comment: CommentInput) {
    comment_createComment(comment: $comment)
     { commentId
 createdAt
 createdBy
 municipality
 commentParentId
 corpus
 deleted
 createdByFirstName
 createdByLastName
 workplace commentParentType } 
}`;
        return this.post({ query, variables: { comment: comment } });
    }

    
    /**
     * Soft deletes a comment
     * */
    public deleteComment = (commentId: number): Promise<void> => {
        const query = `mutation comment_deleteComment($commentId: Int) {
    comment_deleteComment(commentId: $commentId)
     { undefined } 
}`;
        return this.post({ query, variables: { commentId: commentId } });
    }

}
