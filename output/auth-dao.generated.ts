/**
 * Autogenerated interface, DO NOT MODIFY
 */
/* tslint:disable */
import { GraphDao } from "./graph-dao";
import { ILoginInformation } from "./interfaces/login-information.generated"; 

export class AuthDao extends GraphDao {
    
    /**
     * returns your current login status
     * */
    public getStatus = (): Promise<ILoginInformation> => {
        const query = `query auth_getStatus {
    auth_getStatus
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: {  } });
    }

    
    /**
     * Authenticate using api key
     * */
    public apiKeyLogin = (apiKey: string): Promise<ILoginInformation> => {
        const query = `mutation auth_apiKeyLogin($apiKey: String) {
    auth_apiKeyLogin(apiKey: $apiKey)
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: { apiKey: apiKey } });
    }

    
    /**
     * Login using bankid token
     * */
    public doLogin = (token: string): Promise<ILoginInformation> => {
        const query = `mutation auth_doLogin($token: String) {
    auth_doLogin(token: $token)
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: { token: token } });
    }

    
    /**
     * destroys the session, logging out the user
     * */
    public doLogout = (): Promise<void> => {
        const query = `mutation auth_doLogout {
    auth_doLogout
     { undefined } 
}`;
        return this.post({ query, variables: {  } });
    }

    
    /**
     * reloads all the credentials in to the session
     * */
    public refreshLogin = (): Promise<ILoginInformation> => {
        const query = `mutation auth_refreshLogin {
    auth_refreshLogin
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: {  } });
    }

    
    /**
     * Login using bankid token
     * */
    public swapToParentLogin = (parentSsn: string): Promise<ILoginInformation> => {
        const query = `mutation auth_swapToParentLogin($parentSsn: String) {
    auth_swapToParentLogin(parentSsn: $parentSsn)
     { parent { parentSsn
 createdAt
 createdBy
 firstName
 lastName
 coAddress
 address
 zipcode
 city
 addressMunicipality parentCreatedVia }  securityGroups { username
 groupName }  securityRights user { username
 userSsn
 blocked
 createdAt
 municipality
 email
 phone
 firstName
 lastName
 loginTime
 comment
 location
 occupation
 avatar
 workplace
 lastSeen
 language } } 
}`;
        return this.post({ query, variables: { parentSsn: parentSsn } });
    }

}
